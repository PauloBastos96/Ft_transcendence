input {
 file {
    path => "/usr/share/logstash/ingest_data/*"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    codec => "json"
  }
 file {
    path => "/var/lib/docker/containers/*/*.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    codec => json {
      target => "docker"
    }
  }
}

filter {
  if [message] =~ /^\s*$/ {
    drop { }
  }
  if [message] =~ /^\n$/ {
    drop { }
  }
  if "nginx" in [docker][attrs][tag] {
    grok {
      match => { "[docker][log]" =>  ['^%{IP:ip} - - \[%{HTTPDATE}\] "%{WORD:method} %{DATA:request}" %{NUMBER:response} %{NUMBER:bytes} "%{DATA:referrer}" "%{DATA:user-agent}"', '%{DATE} %{TIME} \[%{LOGLEVEL:loglevel}\] %{NUMBER:pid}#%{NUMBER:tid}: \*%{NUMBER:connection_id} %{GREEDYDATA:error_message}, client: %{IP:client_ip}, server: %{IP:server_ip}, request: "%{WORD:method} %{DATA:request} HTTP/%{NUMBER:http_version}", host: "%{HOSTNAME:host}"', '^%{GREEDYDATA:msg}'] }
    }
  }
  if "postgres" in [docker][attrs][tag] {
    grok {
      match => { "[docker][log]" =>  ['^%{DATESTAMP} %{TZ} \[%{POSINT:pid}\] %{WORD:log_level}:  %{GREEDYDATA:message}', '%{TIMESTAMP_ISO8601} %{WORD} \[%{NUMBER:pid}\] %{WORD:log_level}:  %{GREEDYDATA:message}','%{GREEDYDATA:message}']}
    }
  }
  if "backend" in [docker][attrs][tag] {
      grok {
        match => { "[docker][log]" =>  ['^\[%{MONTHDAY}/%{MONTH}/%{YEAR} %{TIME}\] "%{WORD:method} %{URIPATHPARAM:request} HTTP/%{NUMBER:http_version}" %{NUMBER:response} %{NUMBER:bytes}', '%{YEAR}/%{MONTHNUM}/%{MONTHDAY} %{TIME} \[%{LOGLEVEL:loglevel}\] %{NUMBER:pid}#%{NUMBER:tid}: %{GREEDYDATA:msg}', '%{TIMESTAMP_ISO8601:timestamp} %{DATA:source} %{LOGLEVEL:loglevel} +%{GREEDYDATA:message}', '^%{GREEDYDATA:msg}'] }
      }
  }
  else {
    grok {
      match => { "[docker][log]" => "^\[%{TIMESTAMP_ISO8601}\]\[%{LOGLEVEL:loglevel} \]\[%{DATA:module}\] %{GREEDYDATA:message}" }
    }
  }
  if "_grokparsefailure" in [tags] {
  mutate {
    remove_tag => ["_grokparsefailure"]
  }
}

}

output {
  if "nginx" in [docker][attrs][tag] {
    elasticsearch {
      index => "nginx-%{+YYYY.MM.dd}"
      data_stream => "false"
      hosts => "${ELASTIC_HOSTS}"
      user => "${ELASTIC_USER}"
      password => "${ELASTIC_PASSWORD}"
      cacert => "certs/ca/ca.crt"
      ssl => true
    }
  }
  if "postgres" in [docker][attrs][tag] {
    elasticsearch {
      index => "postgres-%{+YYYY.MM.dd}"
      data_stream => "false"
      hosts => "${ELASTIC_HOSTS}"
      user => "${ELASTIC_USER}"
      password => "${ELASTIC_PASSWORD}"
      cacert => "certs/ca/ca.crt"
      ssl => true
    }
  }
  if "backend" in [docker][attrs][tag] {
    elasticsearch {
      index => "backend-%{+YYYY.MM.dd}"
      data_stream => "false"
      hosts => "${ELASTIC_HOSTS}"
      user => "${ELASTIC_USER}"
      password => "${ELASTIC_PASSWORD}"
      cacert => "certs/ca/ca.crt"
      ssl => true
    }
  }
  # else {
  #   elasticsearch {
  #     index => "elk-%{+YYYY.MM.dd}"
  #     data_stream => "false"
  #     hosts=> "${ELASTIC_HOSTS}"
  #     user=> "${ELASTIC_USER}"
  #     password=> "${ELASTIC_PASSWORD}"
  #     cacert=> "certs/ca/ca.crt"
  #     ssl => true
  #   }
  # }
}
